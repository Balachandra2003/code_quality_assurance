name: C++, Python, Rust, and Java Code Quality Checks

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:

jobs:
  lint-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------- C++ ----------------
      - name: Install cpplint
        run: pip install cpplint

      - name: Install cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck

      - name: Run cpplint on .cpp files
        run: |
          echo "üîç Running cpplint..."
          files=$(find . -name "*.cpp")
          if [ -z "$files" ]; then
            echo "‚úÖ No .cpp files found."
          else
            cpplint $files
          fi

      - name: Run cppcheck on .cpp files
        run: |
          echo "üîç Running cppcheck..."
          files=$(find . -name "*.cpp")
          if [ -z "$files" ]; then
            echo "‚úÖ No .cpp file found."
          else
            cppcheck --std=c++11 --enable=all --suppress=missingIncludeSystem --error-exitcode=1 $files
          fi

      # ---------------- Python ----------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pylint and flake8
        run: pip install pylint flake8

      - name: Run pylint on Python files
        run: |
          echo "üîç Running pylint..."
          files=$(find . -name "*.py")
          if [ -z "$files" ]; then
            echo "‚úÖ No Python files found."
          else
            pylint $files
          fi

      - name: Run flake8 on Python files
        run: |
          echo "üîç Running flake8..."
          files=$(find . -name "*.py")
          if [ -z "$files" ]; then
            echo "‚úÖ No Python files found."
          else
            flake8 $files
          fi

      # ---------------- Rust ----------------
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Run cargo clippy
        run: |
          echo "üîç Running cargo clippy..."
          cd rust
          cargo clippy -- -D warnings

      - name: Run cargo fmt
        run: |
          echo "üîç Running cargo fmt..."
          cd rust
          cargo fmt -- --check

            # ---------------- Java ----------------
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven (skip tests)
        working-directory: java
        run: mvn -B compile -DskipTests=true

      - name: Run Checkstyle
        working-directory: java
        run: |
          echo "üîç Running Checkstyle..."
          mvn checkstyle:check

      

