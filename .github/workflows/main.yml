name: C++/Python/Rust Code Quality Checks

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:

jobs:
  lint-and-analyze:
    runs-on: ubuntu-latest
    outputs:
      cpp-status: ${{ steps.cpp-status.outputs.status }}
      python-status: ${{ steps.python-status.outputs.status }}
      rust-status: ${{ steps.rust-status.outputs.status }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------- C++ Setup ----------------
      - name: Install cpplint
        run: pip install cpplint

      - name: Install cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck

      - name: Run C++ Checks
        id: cpp-status
        run: |
          status="success"
          files=$(find . -name "*.cpp")
          if [ -n "$files" ]; then
            cpplint $files || status="failure"
            cppcheck --std=c++11 --enable=all --suppress=missingIncludeSystem --error-exitcode=1 $files || status="failure"
          fi
          echo "status=$status" >> $GITHUB_OUTPUT

      # ---------------- Python Setup ----------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pylint and flake8
        run: pip install pylint flake8

      - name: Run Python Checks
        id: python-status
        run: |
          status="success"
          files=$(find . -name "*.py")
          if [ -n "$files" ]; then
            pylint $files || status="failure"
            flake8 $files || status="failure"
          fi
          echo "status=$status" >> $GITHUB_OUTPUT

      # ---------------- Rust Setup ----------------
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Rust Checks
        id: rust-status
        run: |
          status="success"
          if [ -f "rust/Cargo.toml" ]; then
            cd rust
            cargo clippy -- -D warnings || status="failure"
            cargo fmt -- --check || status="failure"
          fi
          echo "status=$status" >> $GITHUB_OUTPUT

      # ---------------- Display Summary ----------------
      - name: Display PR Summary
        run: |
          echo "C++ Status: ${{ needs.lint-and-analyze.outputs.cpp-status }}"
          echo "Python Status: ${{ needs.lint-and-analyze.outputs.python-status }}"
          echo "Rust Status: ${{ needs.lint-and-analyze.outputs.rust-status }}"
